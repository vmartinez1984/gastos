// <auto-generated />
using System;
using Gastos.Repository.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gastos.Repositories.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230703231518_MyFirstMigration")]
    partial class MyFirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Gastos.Core.Entities.ApartadoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("CantidadFinal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("CantidadInicial")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaDeRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Intereses")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<int>("PeriodoId")
                        .HasColumnType("int");

                    b.Property<int>("SubcategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoDeApartadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubcategoriaId");

                    b.HasIndex("TipoDeApartadoId");

                    b.ToTable("Apartado");
                });

            modelBuilder.Entity("Gastos.Core.Entities.CategoriaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Gastos.Core.Entities.CompraEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaDeRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<int>("MesesSinIntereses")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Nota")
                        .HasColumnType("longtext");

                    b.Property<int>("TdcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("Gastos.Core.Entities.DestinoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Presupuesto")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Destino");
                });

            modelBuilder.Entity("Gastos.Core.Entities.DetalleDeApartadoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ApartadoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaDeRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nota")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DetalleDeApartado");
                });

            modelBuilder.Entity("Gastos.Core.Entities.GastoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaDeRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<int>("PeriodoId")
                        .HasColumnType("int");

                    b.Property<int>("SubcategoriaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubcategoriaId");

                    b.ToTable("Gasto");
                });

            modelBuilder.Entity("Gastos.Core.Entities.PeriodoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Periodo");
                });

            modelBuilder.Entity("Gastos.Core.Entities.SubcategoriaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Subcategoria");
                });

            modelBuilder.Entity("Gastos.Core.Entities.TipoDeApartadoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoDeApartado");
                });

            modelBuilder.Entity("Gastos.Core.Entities.ApartadoEntity", b =>
                {
                    b.HasOne("Gastos.Core.Entities.SubcategoriaEntity", "Subcategoria")
                        .WithMany()
                        .HasForeignKey("SubcategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gastos.Core.Entities.TipoDeApartadoEntity", "TipoDeApartado")
                        .WithMany()
                        .HasForeignKey("TipoDeApartadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subcategoria");

                    b.Navigation("TipoDeApartado");
                });

            modelBuilder.Entity("Gastos.Core.Entities.GastoEntity", b =>
                {
                    b.HasOne("Gastos.Core.Entities.SubcategoriaEntity", "Subcategoria")
                        .WithMany()
                        .HasForeignKey("SubcategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subcategoria");
                });

            modelBuilder.Entity("Gastos.Core.Entities.SubcategoriaEntity", b =>
                {
                    b.HasOne("Gastos.Core.Entities.CategoriaEntity", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
